#%RAML 0.8

title: Kunshan Dai
baseUri: http://kunshandai.avosapps.com/{version}
version: v1
traits:
  - paged:
      queryParameters:
        pages:
          description: The number of pages to return
          type: number

/account:        
  /login:
    post:
      queryParameters:
        mobilePhoneNumber:
          description: |
            mobilePhoneNumber
          type: string
        password:
          description: |
            password
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "username": "18516171260",
                    "emailVerified": false,
                    "mobilePhoneNumber": "18516171260",
                    "mobilePhoneVerified": true,
                    "objectId": "551fea47e4b02dd0ab568b85",
                    "createdAt": "2015-04-04T13:42:31.367Z",
                    "updatedAt": "2015-04-04T13:42:59.487Z"
                }
        210:
          body:
            application/json:
              schema: |
                {
                  "code": 210,
                  "message": "The username and password mismatch."
                }
        211:
          body:
            application/json:
              schema: |
                {
                  "code": 211,
                  "message": "Could not find user"
                }
      description: login system with mobilePhoneNumber & password
  /logout:
    get:
      description: logout current user
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "username": "18516171260",
                    "emailVerified": false,
                    "mobilePhoneNumber": "18516171260",
                    "mobilePhoneVerified": true,
                    "objectId": "551fea47e4b02dd0ab568b85",
                    "createdAt": "2015-04-04T13:42:31.367Z",
                    "updatedAt": "2015-04-04T13:42:59.487Z"
                }
  /isLogin:
    get:
      description: check is current login or not
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "username": "18516171260",
                    "emailVerified": false,
                    "mobilePhoneNumber": "18516171260",
                    "mobilePhoneVerified": true,
                    "objectId": "551fea47e4b02dd0ab568b85",
                    "createdAt": "2015-04-04T13:42:31.367Z",
                    "updatedAt": "2015-04-04T13:42:59.487Z"
                }
        210:
          body:
            application/json:
              schema: |
                {
                  "result":false,
                  "code":210
                }
  /register:
    post:
      description: |
        Register a new user and verify mobilePhoneNumber (close verify in leancloud if necessary)
      queryParameters:
        mobilePhoneNumber:
          description: |
            mobilePhoneNumber
          type: string
        password:
          description: |
            password
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "username": "18516171260",
                    "emailVerified": false,
                    "mobilePhoneNumber": "18516171260",
                    "mobilePhoneVerified": true,
                    "objectId": "551fea47e4b02dd0ab568b85",
                    "createdAt": "2015-04-04T13:42:31.367Z",
                    "updatedAt": "2015-04-04T13:42:59.487Z"
                }
  /requestMobilePhoneVerif:
    get:
      description: |
        重新验证手机号
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "result":"success",
                  "code":200
                }
  /verifyUserMobilePhoneNumber:
    post:
      queryParameters:
        code:
          description: |
            code
          type: integer
      description: |
        验证手机号
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "result":"success",
                  "code":200
                }
  /requestEmailVerify:
    get:
      description: |
        发送验证邮件
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "result":"success",
                  "code":200
                }
  
/loan:
  /create_loan:
    post:
      description: |
        新建一个贷款项目
      queryParameters:
        amount:
          example: 10000.0
          type: string
        spanMonth:
          type: string
        startDate:
          description: 合同开始日期
          example: 2014-10-29
          type: date
        endDate:
          description: 合同结束日期
          example: 2014-10-29
          type: date
        payCircle:
          example: 2
          description: 每X月还一次款
          type: number
        payTotalCircle:
          example: 20
          description: 总共还款的月数
          type: number
        interests:
          description: 百分之N
          example: 5
          type: number
        assureCost:
          example: 10000.0
          type: number
        serviceCost:
          type: number
        overdueCostPercent:
          description: 千分之N
          example: 5
          type: number
        otherCost:
          type: number
        keepCost:
          type: number
        payWay:
          description: 还款方式
          type: string
        firstPayDate:
          description: 首次还款时间
          type: date
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "data": {
                    "id": "5529ec78e4b0da2c5e080694"
                  },
                  "code": 200
                }
  /generate_project:
    post:
      queryParameters:
        name:
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                }

/contract:
  post:
    queryParameters:
      name:
        type: string
    responses:
      200:
        body:
          application/json:
            example: |
              {

              }
  /{id}:
    get:
      responses:
        200:
          body:
            application/json:
              example: |
               {
                
               }


