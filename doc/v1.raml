#%RAML 0.8

title: Kunshan Dai
baseUri: http://kunshandai.avosapps.com/{version}
version: v1
traits:
  - paged:
      queryParameters:
        pages:
          description: The number of pages to return
          type: number

/account:        
  /login:
    post:
      description:
        登录系统
      queryParameters:
        mobilePhoneNumber:
          description: |
            mobilePhoneNumber
          type: string
        password:
          description: |
            password
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "username": "18516171260",
                    "emailVerified": false,
                    "mobilePhoneNumber": "18516171260",
                    "mobilePhoneVerified": true,
                    "objectId": "551fea47e4b02dd0ab568b85",
                    "createdAt": "2015-04-04T13:42:31.367Z",
                    "updatedAt": "2015-04-04T13:42:59.487Z"
                }
        210:
          body:
            application/json:
              schema: |
                {
                  "code": 210,
                  "message": "The username and password mismatch."
                }
        211:
          body:
            application/json:
              schema: |
                {
                  "code": 211,
                  "message": "Could not find user"
                }
  /logout:
    get:
      description: 登出当前用户
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "username": "18516171260",
                    "emailVerified": false,
                    "mobilePhoneNumber": "18516171260",
                    "mobilePhoneVerified": true,
                    "objectId": "551fea47e4b02dd0ab568b85",
                    "createdAt": "2015-04-04T13:42:31.367Z",
                    "updatedAt": "2015-04-04T13:42:59.487Z"
                }
  /isLogin:
    get:
      description: 查看用户是否已登录
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "username": "18516171260",
                    "emailVerified": false,
                    "mobilePhoneNumber": "18516171260",
                    "mobilePhoneVerified": true,
                    "objectId": "551fea47e4b02dd0ab568b85",
                    "createdAt": "2015-04-04T13:42:31.367Z",
                    "updatedAt": "2015-04-04T13:42:59.487Z"
                }
        210:
          body:
            application/json:
              schema: |
                {
                  "result":false,
                  "code":210
                }
  /register:
    post:
      description: |
        注册用户
      queryParameters:
        mobilePhoneNumber:
          description: |
            mobilePhoneNumber
          type: string
        password:
          description: |
            password
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "username": "18516171260",
                    "emailVerified": false,
                    "mobilePhoneNumber": "18516171260",
                    "mobilePhoneVerified": true,
                    "objectId": "551fea47e4b02dd0ab568b85",
                    "createdAt": "2015-04-04T13:42:31.367Z",
                    "updatedAt": "2015-04-04T13:42:59.487Z"
                }
  /requestMobilePhoneVerify:
    get:
      description: |
        重新验证手机号
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "result":"success",
                  "code":200
                }
  /verifyUserMobilePhoneNumber:
    post:
      queryParameters:
        code:
          description: |
            code
          type: integer
      description: |
        验证手机号
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "result":"success",
                  "code":200
                }
  /requestEmailVerify:
    get:
      description: |
        发送验证邮件
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "result":"success",
                  "code":200
                }
  /requestResetPasswordBySmsCode:
    post:
      description: |
        获取重置密码的短信验证码 (错误信息和leancloud错误信息一致)
      queryParameters:
        mobilePhoneNumber:
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "result":"success",
                  "code":200
                }  
  /resetPasswordBySmsCode:
    post:
      description: |
        通过短信验证码重置密码 (错误信息和leancloud错误信息一致)
      queryParameters:
        code:
          type: string
        password:
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "result":"success",
                  "code":200
                }  
  /profile:
    get:
      description: 获取当前用户的 profile
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "data": {
                        "username": "18516171260",
                        "emailVerified": false,
                        "mobilePhoneNumber": "18516171260",
                        "mobilePhoneVerified": true,
                        "objectId": "5545ad47e4b0fe5138559c89",
                        "createdAt": "2015-05-03T05:08:23.289Z",
                        "updatedAt": "2015-05-03T05:08:42.919Z"
                    },
                    "code": 200
                }
    put:
      description: 更新用户信息, 完善资料
      queryParameters:
        infoObject:
          description: 可以放json对象，需要的用户资料
          example:  |
            {
              "gender":'MALE',
              "address":'fdasfdsa',
              "company":{
                "name":"fdasfas"
                "address":"fdsafas"
              }
            }
      responses:
        200:
          body:
            application/json:
              schema: |
                同 get 方法
    /password:
      put:
        description: 通过原密码修改 password
        queryParameters:
          oldPassword:
            type: string
            description: 原密码
          newPassword:
            type: string
            description: 新密码
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                      "result": "success",
                      "code": 200
                  }
          410:
            body:
              application/json:
                schema: |
                  {
                      "code": 410,
                      "message": "修改失败,密码错误!"
                  }
    /icon:
      put:
        description: 设置用户头像
        queryParameters:
          icon_id:
            type: string
            description: 头像文件 id
        responses:
          200:
            body:
              application/json:
                schema: |
                  同 user get 方法返回值
    /attachments:
      get:
        description: 获取一个用户资料附件
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                      "data": [
                          {
                              "mime_type": "image/jpeg",
                              "key": "0e21afbf944f4bef.jpg",
                              "name": "DSC_4372副本.jpg",
                              "url": "http://ac-gvw1ggob.clouddn.com/0e21afbf944f4bef.jpg",
                              "metaData": {
                                  "owner": "554876e2e4b03ccbae866c22",
                                  "size": 41603,
                                  "fileType": "certification",
                                  "mime_type": "image/jpeg"
                              },
                              "bucket": "gvw1ggob",
                              "objectId": "5556fdd9e4b04ecf6b15a29d",
                              "createdAt": "2015-05-16T08:20:41.585Z",
                              "updatedAt": "2015-05-16T08:20:41.585Z"
                          }
                      ],
                      "code": 200
                  }
      post:
        description: 给用户添加一个附件
        queryParameters:
          attid:
            type: string
            description: 附件的id
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                      "result": "success",
                      "code": 200
                  }
      delete:
        description: 移除一个用户附件
        queryParameters:
          attid:
            type: string
            description: 附件的id        
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                      "result": "success",
                      "code": 200
                  }
  
/loan:
  /{id}:
    get:
      description: |
        获取一个项目详情
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "data": {
                    "id": "553151b8e4b052897f2b198c",
                    "amount": 111111,
                    "createdAt": "2015-04-18 02:32:24",
                    "loaner": {
                      "name": "test12",
                      "email": "yilaing@foxmail.com"
                    },
                    "assurer": {
                      "name": "test12",
                      "email": "yilaing@foxmail.com"
                    },
                    "payWay": {
                      "value": "debx",
                      "text": "等额本息"
                    },
                    "status": {
                      "value": 0,
                      "text": "未完成创建"
                    },
                    "spanMonth": 10,
                    "startDate": null,
                    "endDate": null,
                    "payCircle": 3,
                    "payTotalCircle": 3,
                    "interests": 0.02,
                    "assureCost": 1000,
                    "serviceCost": 1000,
                    "overdueCostPercent": 0.003,
                    "otherCost": 1000,
                    "keepCost": 1000,
                    "otherCostDesc": "test",
                    "keepCostDesc": "test",
                    "firstPayDate": null
                  },
                  "code": 200
                }
        404:
          body:
            application/json:
              schema: |
                {
                  "code": 404,
                  "message": "找不到对象!"
                }
    put:
      description: |
        更新一个一个项目详情
      queryParameters:
        data:
          description: |
            与创建项目 create_loan 相同
          example: |
            {
              "amount" :111111,
              "spanMonth":10,
              "startDate":"2015-1-10",
              "endDate":"2015-10-10",
              "payCircle" : 3,
              "payTotalCircle" : 3,
              "interests" : 0.02,
              "assureCost" : 1000.0,
              "serviceCost" : 1000.0,
              "overdueCostPercent" : 0.003,
              "otherCost" : 1000.0,
              "keepCost" : 1000.0,
              "otherCostDesc" : "test",
              "keepCostDesc" : "test",
              "payWay" : "debx",
              "loanType":"qcdy",
              "firstPayDate" : "2015-4-10"   
            }
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "data": {
                    "id": "553151b8e4b052897f2b198c",
                    "amount": 111111,
                    "createdAt": "2015-04-18 02:32:24",
                    "loaner": {
                      "name": "test12",
                      "email": "yilaing@foxmail.com"
                    },
                    "assurer": {
                      "name": "test12",
                      "email": "yilaing@foxmail.com"
                    },
                    "payWay": {
                      "value": "debx",
                      "text": "等额本息"
                    },
                    "status": {
                      "value": 0,
                      "text": "未完成创建"
                    },
                    "spanMonth": 10,
                    "startDate": null,
                    "endDate": null,
                    "payCircle": 3,
                    "payTotalCircle": 3,
                    "interests": 0.02,
                    "assureCost": 1000,
                    "serviceCost": 1000,
                    "overdueCostPercent": 0.003,
                    "otherCost": 1000,
                    "keepCost": 1000,
                    "otherCostDesc": "test",
                    "keepCostDesc": "test",
                    "firstPayDate": null
                  },
                  "code": 200
                }
        404:
          body:
            application/json:
              schema: |
                {
                  "code": 404,
                  "message": "找不到对象!"
                }
    delete:
      description: |
        删除一个项目（只能删除draft项目）
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "data": {
                    "id": "553151b8e4b052897f2b198c",
                    "amount": 111111,
                    "createdAt": "2015-04-18 02:32:24",
                    "loaner": {
                      "name": "test12",
                      "email": "yilaing@foxmail.com"
                    },
                    "assurer": {
                      "name": "test12",
                      "email": "yilaing@foxmail.com"
                    },
                    "payWay": {
                      "value": "debx",
                      "text": "等额本息"
                    },
                    "status": {
                      "value": 0,
                      "text": "未完成创建"
                    },
                    "spanMonth": 10,
                    "startDate": null,
                    "endDate": null,
                    "payCircle": 3,
                    "payTotalCircle": 3,
                    "interests": 0.02,
                    "assureCost": 1000,
                    "serviceCost": 1000,
                    "overdueCostPercent": 0.003,
                    "otherCost": 1000,
                    "keepCost": 1000,
                    "otherCostDesc": "test",
                    "keepCostDesc": "test",
                    "firstPayDate": null
                  },
                  "code": 200
                }
        404:
          body:
            application/json:
              schema: |
                {
                  "code": 404,
                  "message": "找不到对象!"
                }
        500:
          body:
            application/json:
              schema: |
                {
                  "code": 500,
                  "message": "不能删除正在还款的项目!"
                }
        510:
          body:
            application/json:
              schema: |
                {
                  "code": 510,
                  "message": "你没有权限删除这个对象!"
                }
    /payments:
      description: |
        获取一个项目的所有放款记录
      get:
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                    "data": [
                      {
                        "assureCost": -1000,
                        "serviceCost": -1000,
                        "outMoney": 107111,
                        "keepCost": -1000,
                        "order": 0,
                        "interestsMoney": 0,
                        "otherCost": -1000,
                        "objectId": "553151d4e4b052897f2b19e8",
                        "createdAt": "2015-04-17T18:32:52.490Z",
                        "updatedAt": "2015-04-17T18:32:52.490Z"
                      }
                    ],
                    "code": 200
                  }
          404:
            body:
              application/json:
                schema: |
                  {
                    "code": 404,
                    "message": "找不到对象!"
                  }
    /paybacks:
      description: |
        获取一个项目的所有还款记录
      get:
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                    "data": [
                      {
                        "order": 1,
                        "status": 1,
                        "payMoney": 43703.66,
                        "payDate": "2015-04-10T00:00:00+08:00",
                        "objectId": "553151f6e4b052897f2b1a33",
                        "createdAt": "2015-04-17T18:33:26.658Z",
                        "updatedAt": "2015-04-17T18:33:26.658Z"
                      },
                      {
                        "order": 2,
                        "status": 2,
                        "payMoney": 43703.66,
                        "payDate": "2015-07-10T00:00:00+08:00",
                        "objectId": "553151f6e4b052897f2b1a34",
                        "createdAt": "2015-04-17T18:33:26.670Z",
                        "updatedAt": "2015-04-17T18:33:26.670Z"
                      }
                    ],
                    "code": 200
                  }
          404:
            body:
              application/json:
                schema: |
                  {
                    "code": 404,
                    "message": "找不到对象!"
                  }
    /mergePayBack:
      post:
        description: 发送付款(最后一期不能计算到合并付款中)
        queryParameters:
          data:
            type: string
            description : 发送合并付款的 paybackid 和 实际付款时间
            example: |
              {
                "payBackIds":["5557b39ee4b06f7d8f37507a","5557b39ee4b06f7d8f375079"],
                "payBackDate":"2015-05-20",
                "payBackMoney": "67200.00"
              }
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                      "data": {
                          "loaner": {
                              "ObjectId": "5556ba24e4b04ecf6b11fbf7"
                          },
                          "loanObjectId": "5556ba23e4b0846761066ff4",
                          "loanNumberWithName": "张先生10215",
                          "payObjectId": "5556ba33e4b066d561fcf7d6",
                          "serialNumber": 10215,
                          "payTotalCircle": 4,
                          "payCurrCircle": 3,
                          "payDate": "2015-04-28T16:00:00+00:00",
                          "amount": 40000,
                          "payMoney": 400,
                          "overdueMoney": 0,
                          "interestsMoney": 400
                      },
                      "code": 200
                  }
      /bill:
        post:
          description: 合并付款账单(最后一期不能计算到合并付款中)
          queryParameters:
            data:
              type: string
              description : 发送合并付款的 paybackid 和 实际付款时间
              example: |
                {
                  "payBackIds":["5557b39ee4b06f7d8f37507a","5557b39ee4b06f7d8f375079"],
                  "payBackDate":"2015-05-20"
                }
          responses:
            200:
              body:
                application/json:
                  schema: |
                    {
                      "data": {
                        "amount": 60000,
                        "interest": 7200,
                        "overdueMoney": 0,
                        "payMoney": 67200
                      },
                      "code": 200
                    }
  /list/{filter}/{pn}:
    get:
      description: |
        分页获取该用户所有项目
        filter: draft:draft项目 | overdue: 逾期 | normal:正常 | badbill:坏账 | all：所有 | completed：已结清
      queryParameters:
        startDate:
          type: date
          description: all 的时候发送
        endDate:
          type: date
          description: all 的时候发送
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "data": {
                    "totalPageNum": 1,
                    "totalNum": 3,
                    "pageSize": 10,
                    "values": [
                      {
                        "id": "55378bc2e4b0aff70792dc1c",
                        "objectId": "55378bc2e4b0aff70792dc1c",
                        "amount": 100000,
                        "createdAt": "2015-04-22 19:53:38",
                        "loaner": {
                          "id": "55378bc2e4b0aff70792dc20",
                          "name": "潘xx",
                          "email": ""
                        },
                        "payedMoney": 0,
                        "assurer": {
                          "id": "55378bc2e4b0aff70792dc20",
                          "name": "潘xx",
                          "email": ""
                        },
                        "loanType": {
                          "value": "fcdy",
                          "text": "房产抵押"
                        },
                        "payWay": {
                          "value": "debx",
                          "text": "等额本息"
                        },
                        "status": {
                          "value": 2,
                          "text": "已完成"
                        },
                        "payStatus": {
                          "value": "completed",
                          "text": "结清项目"
                        },
                        "serialNumber": 10001,
                        "currPayStep": 1,
                        "spanMonth": 4,
                        "currPayDate": "2015-11-11T16:00:00.000Z",
                        "finishDate": "2015-11-11T16:00:00.000Z",
                        "payTotalCircle": 4,
                        "payedMoney": 10231.00
                      }
                    ]
                  },
                  "code": 200
                }
  /create_loan:
    post:
      description: |
        新建一个贷款项目(新建贷款第一步，然后新建联系人)
      queryParameters:
        loanType:
          example: qcdy(通过字典表接口获取)
          type: string
        amount:
          example: 10000.0
          type: string
        spanMonth:
          type: string
        startDate:
          description: 合同开始日期
          example: 2014-10-29
          type: string
        endDate:
          description: 合同结束日期
          example: 2014-10-29
          type: string
        payCircle:
          example: 2
          description: 每X月还一次款
          type: number
        payTotalCircle:
          example: 20
          description: 总共还款的月数
          type: number
        interests:
          description: 百分之N(按处理后的小数传递)
          example: 0.05（这个是百分之五）
          type: number
        assureCost:
          example: 10000.0
          type: number
        serviceCost:
          type: number
        overdueCostPercent:
          description: 千分之N(按处理后的小数传递)
          example: 0.001（这个是千分之一)
          type: number
        otherCost:
          type: number
        otherCostDesc:
          type: string
        keepCost:
          type: number
        keepCostDesc:
          type: string
        payWay:
          description: |
            还款方式,可能后期变动
          example: |
            {"debx":等额本息, "zqch":周期初还本付息,"zqmh":周期末还本付息,"qx":还全息}
          type: string
        firstPayDate:
          description: 首次还款时间
          type: string
        isEmailRemind:
          description: 是否邮件提醒
          type: boolean
        isSmsRemind:
          description: 是否短信提醒
          type: boolean
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "data": {
                        "amount": 111111,
                        "spanMonth": 10,
                        "startDate": {
                            "__type": "Date",
                            "iso": "2015-01-09T16:00:00.000Z"
                        },
                        "endDate": {
                            "__type": "Date",
                            "iso": "2015-10-10T00:00:00.000Z"
                        },
                        "payCircle": 3,
                        "payTotalCircle": 10,
                        "interests": 0.02,
                        "assureCost": 1000,
                        "serviceCost": 1000,
                        "overdueCostPercent": 0.003,
                        "otherCost": 1000,
                        "keepCost": 1000,
                        "payWay": "debx",
                        "firstPayDate": {
                            "__type": "Date",
                            "iso": "2015-04-09T16:00:00.000Z"
                        },
                        "status": 0,
                        "objectId": "552acd98e4b0b40da3725bd4",
                        "createdAt": "2015-04-12T19:55:04.068Z",
                        "updatedAt": "2015-04-12T19:55:04.068Z"
                    },
                    "code": 200
                }
  /generate_bill:
    description: |
      生成放款账单（目前只支持xxhb）（新建贷款第二步）
    post:
      queryParameters:
        loanId:
          required: true
          type: string
        loanerId:
          required: true
          type: string
        assurerId:
          required: false
          type: string
        loanPawnId:
          required: true
          type: string
        isModifiedLoan:
          required: true
          type: boolean
        preLoanData:
          required: true
          type: string
          example: |
            {
              "loanId" : "fdafdsafas",
              "finishBill" : {
                "income": { 
                  "amount": 0, 
                  "overdueMoney": 0,
                  "interest": 0  
                },
                "outcome": { 
                  "assureCost": 0, 
                  "keepCost": 0,
                  "interest" : 0 
                },
                "sum":0
              },
              "version" : 0
            }
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "data": {
                    "loanId": {
                      "id": "55316dd5e4b052897f2b54c3",
                      "amount": 111111,
                      "createdAt": "2015-04-18 04:32:21",
                      "loaner": {
                        "id": "55314bcee4b052897f2b0a8b"
                      },
                      "assurer": {
                        "id": "55314bcee4b052897f2b0a8b"
                      },
                      "loanType": {
                        "value": "qcdy",
                        "text": "汽车抵押"
                      },
                      "payWay": {
                        "value": "debx",
                        "text": "等额本息"
                      },
                      "status": {
                        "value": 0,
                        "text": "未完成创建"
                      }
                    },
                    "loanRecord": {
                      "interestsMoney": 0,
                      "keepCost": -1000,
                      "assureCost": -1000,
                      "serviceCost": -1000,
                      "otherCost": -1000,
                      "outMoney": 107111,
                      "order": 1,
                      "objectId": "553171a2e4b052897f2b5b52",
                      "createdAt": "2015-04-17T20:48:34.913Z",
                      "updatedAt": "2015-04-17T20:48:34.913Z"
                    }
                  },
                  "code": 200
                }
        400:
          body:
            application/json:
              schema: |
                {
                  "code": 400,
                  "message": "项目已经处于还款状态!"
                }
        404:
          body:
            application/json:
              schema: |
                {
                  "code": 404,
                  "message": "找不到对象!"
                }  
  /assure_bill:
    description: |
      完成项目创建，如果不执行这一步取消了，这个项目就是草稿项目，放入草稿箱（新建贷款第三步，完成）
    post:
      queryParameters:
        loanId:
          type: string
        outMoney:
          type: number
          description: 实际放款金额
        outDate:
          type: date
          description: 实际放款日期
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "data": {
                    "id": "55316d88e4b052897f2b533e",
                    "amount": 111111,
                    "createdAt": "2015-04-18 04:31:04",
                    "loaner": null,
                    "assurer": null,
                    "loanType": {
                      "value": "qcdy",
                      "text": "汽车抵押"
                    },
                    "payWay": {
                      "value": "debx",
                      "text": "等额本息"
                    },
                    "status": {
                      "value": 1,
                      "text": "进行中"
                    },
                    "spanMonth": 10,
                    "startDate": "2015-01-10 00:00:00",
                    "endDate": "2015-10-10 08:00:00",
                    "payCircle": 3,
                    "payTotalCircle": 3,
                    "interests": 0.02,
                    "assureCost": 1000,
                    "serviceCost": 1000,
                    "overdueCostPercent": 0.003,
                    "otherCost": 1000,
                    "keepCost": 1000,
                    "otherCostDesc": "test",
                    "keepCostDesc": "test",
                    "firstPayDate": "2015-04-10 00:00:00"
                  },
                  "code": 200
                }
        400:
          body:
            application/json:
              schema: |
                {
                  "code": 400,
                  "message": "项目已经处于还款状态!"
                }
        404:
          body:
            application/json:
              schema: |
                {
                  "code": 404,
                  "message": "找不到对象!"
                }  
  /payBack:
    /list/{pn}:
      description: |
        分条件列出收款管理内项目
      get:
        queryParameters:
          startDate:
            type: date
            description: |
              起始时间
          endDate:
            type: date
            description: |
              终止时间
          loanType:
            type: string
            description: |
              抵押类型，从字典表获取value，所有贷款类型的话就不传或者undefined
          status:
            type: number
            description: |
              贷款类型 1:未还  3:已还
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                      "data": {
                          "totalPageNum": 1,
                          "totalNum": 1,
                          "pageSize": 10,
                          "values": [
                              {
                                  "loanObjectId": "55378bc2e4b0aff70792dc1c",
                                  "payObjectId": "55378bc7e4b0aff70792dc5f",
                                  "payTotalCircle": 3,
                                  "payCurrCircle": 1,
                                  "payDate": "2015-04-22T00:00:00+08:00",
                                  "payBackDate": "2015-04-22T00:00:00+08:00",
                                  "amount": 100000,
                                  "payMoney": 633333.3333333334,
                                  "payBackMoney": 3213123.00,
                                  "serialNumber": 10001,
                                  "loaner": {
                                    "name" : "fdsfa",
                                    "ObjectId": "fdsfhdjsahfjdsahfkjs"
                                  }
                              }
                          ]
                      },
                      "code": 200
                  }
    /{paybackid}:
      post:
        description: |
          还款,但是不能还最后一期
        queryParameters:
          payBackMoney:
            type: number
            description: |
              实际还的钱
          payBackDate:
            type: number
            description: |
              实际还钱日期
          payType:
            type: string
            description: 查看 payBackTypes 字典表 共4种还款类型
          offsetMoney:
            type: number
            description: 少还或者多还的钱（绝对值)
        responses:
          200:
            description: |
              成功，返回下一期的还款任务
            body:
              application/json:
                schema: | 
                  {
                    "data": {   
                      "loanObjectId": "55378bc2e4b0aff70792dc1c",
                      "payObjectId": "55378bc7e4b0aff70792dc60",
                      "payTotalCircle": 3,
                      "payCurrCircle": 2,
                      "payDate": "2015-07-22T00:00:00+08:00",
                      "amount": 100000,
                      "payMoney": 633333.3333333334,
                      "overdueMoney": 620
                    },
                    "code": 200
                  }
          500:
            body:
              application/json:
                schema: |
                  {
                    "code": 500,
                    "message": "这是最后一期还款，请跳转到结清"
                  }
      /bill:
        get:
          description: |
            计算还款金额（不用于计算结清）
          queryParameters:
            payBackDate:
              type: date
              description: |
                实际还钱日期
          responses:
            200:
              description: |
                成功，返回下一期的还款任务
              body:
                application/json:
                  schema: | 
                    {
                      "data": {
                        "loanObjectId": "55378bc2e4b0aff70792dc1c",
                        "payObjectId": "55378bc7e4b0aff70792dc62",
                        "payTotalCircle": 3,
                        "payCurrCircle": 3,
                        "payDate": "2015-10-22T00:00:00+08:00",
                        "amount": 100000,
                        "payMoney": 6833333.333333333,
                        "overdueMoney": 6200,
                        "interestsMoney": 100.0
                      },
                      "code": 200
                    }
            500:
              body:
                application/json:
                  schema: |
                    {
                      "code": 500,
                      "message": "这是最后一期还款，请跳转到结清"
                    }
    /{loanId}:
      /finish:
        post:
          description: |
            结清接口
          queryParameters:
            data:
              type: string
              description: 
              example: |
                {
                    "payType": "normal | favour | partial",
                    "payBackDate":"2014-10-10",
                    "payBackData":{
                      "income": {
                        "amount": 0, //应还金额
                        "overdueMoney": 0 //其中违约金
                      },
                      "outcome": {
                        "assureCost": 0, //退还的保证金
                        "keepCost": 0, //退还的暂存金额
                        "favourMoney": 100 //优惠的金额
                      },
                      "sum": 0 //总结清支付费用
                    }
                }
          responses:
            200:
              body:
                application/json:
                  schema: |
                    {
                      "data": {
                        "income": {
                          "amount": 0,
                          "overdueMoney": 0
                        },
                        "outcome": {
                          "assureCost": 0,
                          "keepCost": 0
                        }
                      },
                      "code": 200
                    }
            500:
              body:
                application/json:
                  schema: |
                    {
                      "code": 500,
                      "message": "项目状态错误"
                    }
        /bill:
          description: 结清账单
          get:
            description: |
              查看结清账单
            queryParameters:
              payDate:
                type: date
                example: |
                  "2014-10-10"
              interestCalType:
                type: string
                description: |
                  计算利息的方式 
                example: |
                  interestCalTypes 去 dict/key 接口取字典表
            responses:
              200:
                body:
                  application/json:
                    schema: |
                      {
                        "data": {
                          "income": { 
                            "amount": 0, 
                            "overdueMoney": 0,
                            "interest": 0  
                          },
                          "outcome": { 
                            "assureCost": 0, 
                            "keepCost": 0,
                            "interest" : 0,
                            "payedMoney":0,
                            "favourMoney":0 
                          },
                          "sum":0
                        },
                        "code": 200
                      }
              500:
                body:
                  application/json:
                    schema: |
                      {
                        "code": 500,
                        "message": "访问了没有权限的项目/缺少还款类型/还款时间不能早于项目开始时间"
                      }
  /search:
    get:
      description: |
        根据姓名和ID搜索项目
      queryParameters:
        type:
          description: |
            查询类型  name:名字 | id:主键
          type: string
        key:
          description: |
            查询匹配字段
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  
                }
  /statictics:
    /income:
      get:
        description: |
          获取收入统计信息
        queryParameters:
          startDate:
            type: date
            example: | 
              2015-05-01
          endDate:
            type: date
            example: |
              2015-05-31
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                      "data": {
                          "sum": 100,
                          "startsWith": 1430409600000,
                          "endsWith": 1433087999999,
                          "typeStatictics": {
                              "fcdy": {
                                  "value": "fcdy",
                                  "text": "房产抵押",
                                  "sum": 0
                              },
                              "qcdy": {
                                  "value": "qcdy",
                                  "text": "汽车抵押",
                                  "sum": 100
                              },
                              "mfdy": {
                                  "value": "mfdy",
                                  "text": "买房抵押",
                                  "sum": 0
                              },
                              "mcdy": {
                                  "value": "mcdy",
                                  "text": "买车抵押",
                                  "sum": 0
                              },
                              "wdy": {
                                  "value": "wdy",
                                  "text": "无抵押",
                                  "sum": 0
                              },
                              "qtdy": {
                                  "value": "qtdy",
                                  "text": "其他抵押",
                                  "sum": 0
                              }
                          },
                          "wayStattictics": {
                              "debx": {
                                  "value": "debx",
                                  "text": "等额本息",
                                  "sum": 100
                              },
                              "xxhb": {
                                  "value": "xxhb",
                                  "text": "先息后本",
                                  "sum": 0
                              },
                              "zqcxhb": {
                                  "value": "zqcxhb",
                                  "text": "周期初息后本",
                                  "sum": 0
                              },
                              "zqmxhb": {
                                  "value": "zqmxhb",
                                  "text": "周期末息后本",
                                  "sum": 0
                              },
                              "dqhbfx": {
                                  "value": "dqhbfx",
                                  "text": "到期还本付息",
                                  "sum": 0
                              }
                          }
                      },
                      "code": 200
                  }
    /outcome:
      get:
        description: |
          获取支出统计信息
        queryParameters:
          startDate:
            type: date
            example: | 
              2015-05-01
          endDate:
            type: date
            example: |
              2015-05-31
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                      "data": {
                          "sum": 100,
                          "startsWith": 1430409600000,
                          "endsWith": 1433087999999,
                          "typeStatictics": {
                              "fcdy": {
                                  "value": "fcdy",
                                  "text": "房产抵押",
                                  "sum": 0
                              },
                              "qcdy": {
                                  "value": "qcdy",
                                  "text": "汽车抵押",
                                  "sum": 100
                              },
                              "mfdy": {
                                  "value": "mfdy",
                                  "text": "买房抵押",
                                  "sum": 0
                              },
                              "mcdy": {
                                  "value": "mcdy",
                                  "text": "买车抵押",
                                  "sum": 0
                              },
                              "wdy": {
                                  "value": "wdy",
                                  "text": "无抵押",
                                  "sum": 0
                              },
                              "qtdy": {
                                  "value": "qtdy",
                                  "text": "其他抵押",
                                  "sum": 0
                              }
                          },
                          "wayStattictics": {
                              "debx": {
                                  "value": "debx",
                                  "text": "等额本息",
                                  "sum": 100
                              },
                              "xxhb": {
                                  "value": "xxhb",
                                  "text": "先息后本",
                                  "sum": 0
                              },
                              "zqcxhb": {
                                  "value": "zqcxhb",
                                  "text": "周期初息后本",
                                  "sum": 0
                              },
                              "zqmxhb": {
                                  "value": "zqmxhb",
                                  "text": "周期末息后本",
                                  "sum": 0
                              },
                              "dqhbfx": {
                                  "value": "dqhbfx",
                                  "text": "到期还本付息",
                                  "sum": 0
                              }
                          }
                      },
                      "code": 200
                  }

/loanPawn:
  description: |
    贷款抵押物接口
  post:
    description: |
      新建一个抵押物
    queryParameters:
      data:
        type: string
        description: |
          按照自己定义的json数据结构存储
      attachments:
        type: string
        description: |
          附件的id list
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "data": {
                  "data": {
                    "name": "fdsa",
                    "type": "type",
                    "update": "fdsafa"
                  },
                  "objectId": "5540925be4b055ee74e6f982",
                  "createdAt": "2015-04-29T08:12:11.279Z",
                  "updatedAt": "2015-04-29T08:12:11.279Z"
                },
                "code": 200
              }
  /{id}:
    get:
      description: |
        获取抵押物信息
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                    "data": {
                        "data": {
                            
                        },
                        "attachments": {
                            "__type": "Relation",
                            "className": "_File"
                        },
                        "objectId": "5540de2de4b055ee74ead7c5",
                        "createdAt": "2015-04-29T13:35:41.230Z",
                        "updatedAt": "2015-04-29T13:35:41.550Z"
                    },
                    "code": 200
                }

    /attachments:
      get:
        description: |
          获取抵押物附件信息
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                    "data": [
                      {
                        "mime_type": "image/jpeg",
                        "key": "999745ff88d81fd6.jpg",
                        "name": "account_view.jpg",
                        "url": "http://ac-gvw1ggob.clouddn.com/999745ff88d81fd6.jpg",
                        "metaData": {
                          "owner": "552f6adfe4b0643b70a8f3bd",
                          "size": 364463,
                          "fileType": "credit",
                          "mime_type": "image/jpeg"
                        },
                        "bucket": "gvw1ggob",
                        "objectId": "55404984e4b063749a728fe4",
                        "createdAt": "2015-04-29T03:01:24.345Z",
                        "updatedAt": "2015-04-29T03:01:24.345Z"
                      }
                    ],
                    "code": 200
                  }

/contact:
  post:
    description: |
      用户新建一个联系人
    queryParameters:
      data:
        description: |
          以json形式传输联系人信息创建联系人,直接发送下面的json，不用加data
        type: string
        example: |
           {
             "name":"test",
             "mobilePhoneNumber":"18516171260",
             "certificateType":"shenfenzheng",
             "certificateNum":"542421421421321312312",
             "email":"yilaing@foxmail.com",
             "qq":"32727272992",
             "address":"fdsafasf",
             "wechat":"fasdfa",
             "sendSmsOrNot": false,
             "attachments": ["552a0e61e4b0b40da36acc5b"] //可以多个
           }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                 "data": {
                     "name": "test23",
                     "certificateType": "shenfenzheng",
                     "certificateNum": "542421421421321312312",
                     "email": "yilaing@foxmail.com",
                     "qq": "32727272992",
                     "address": "fdsafasf",
                     "wechat": "fasdfa",
                     "mobilePhoneNumber": "13911111111",
                     "objectId": "552ad42ee4b0da2c5e125ec1",
                     "createdAt": "2015-04-12T20:23:10.255Z",
                     "updatedAt": "2015-04-12T20:23:10.255Z"
                 },
                 "code": 200
             }

  /{id}:
    get:
      description: |
        通过 ID 获取联系人对象
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "data": [
                    {
                      "address": "fdsafasf",
                      "email": "yilaing@foxmail.com",
                      "certificateType": "shenfenzheng",
                      "name": "test12",
                      "attachments": {
                        "__type": "Relation",
                        "className": "_File"
                      },
                      "certificateNum": "5424214214213213123121",
                      "qq": "32727272992",
                      "wechat": "fasdfa",
                      "mobilePhoneNumber": "13911111111",
                      "owner": {
                        "__type": "Pointer",
                        "className": "_User",
                        "objectId": "552be147e4b0da2c5e1bdc18"
                      },
                      "objectId": "552cce24e4b0da2c5e210acb",
                      "createdAt": "2015-04-14T08:21:56.367Z",
                      "updatedAt": "2015-04-14T08:21:56.750Z"
                    }
                  ],
                  "code": 200
                }
        404:
          body:
            application/json:
              example: |
                {
                  "code": 404,
                  "message": "contact not found"
                }

    delete:
      description: |
        删除一个联系人
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "result": "success",
                  "code": 200
                }
        404:
          body:
            application/json:
              example: |
                {
                  "code": 404,
                  "message": "contact not found"
                }
        500:
          body:
            application/json:
              example: |
                {
                  "code": 404,
                  "message": "该联系人还有项目，不能删除!"
                }

    put:
      description: |
        用户更新一个联系人
      queryParameters:
        data:
          description: |
            以json形式传输联系人信息创建联系人,直接发送下面的json，不用加data
          type: string
          example: |
             {
               "name":"test",
               "mobilePhoneNumber":"18516171260",
               "certificateType":"shenfenzheng",
               "certificateNum":"542421421421321312312",
               "email":"yilaing@foxmail.com",
               "qq":"32727272992",
               "address":"fdsafasf",
               "wechat":"fasdfa",
               "attachments": ["552a0e61e4b0b40da36acc5b"] //可以多个
             }
      responses:
        200:
          body:
            application/json:
              example: |
               {
                   "data": {
                       "name": "test23",
                       "certificateType": "shenfenzheng",
                       "certificateNum": "542421421421321312312",
                       "email": "yilaing@foxmail.com",
                       "qq": "32727272992",
                       "address": "fdsafasf",
                       "wechat": "fasdfa",
                       "mobilePhoneNumber": "13911111111",
                       "objectId": "552ad42ee4b0da2c5e125ec1",
                       "createdAt": "2015-04-12T20:23:10.255Z",
                       "updatedAt": "2015-04-12T20:23:10.255Z"
                   },
                   "code": 200
               }
        404:
          body:
            application/json:
              schema: |
                {
                  "code": 404,
                  "message": "找不到对象!"
                }

    /attachments:
      get:
        description: |
          获取联系人所有附件
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                    "data": [
                      {
                        "mime_type": "image/jpeg",
                        "key": "e55c7c8ab63d1ad6.JPG",
                        "name": "IMGP0111剪裁.JPG",
                        "url": "http://ac-gvw1ggob.clouddn.com/e55c7c8ab63d1ad6.JPG",
                        "metaData": {
                          "owner": "552e5c62e4b0c0794dc1ac59",
                          "size": 41727,
                          "fileType": "certification",
                          "mime_type": "image/jpeg"
                        },
                        "bucket": "gvw1ggob",
                        "objectId": "553a2f7ce4b0072c25e1f8cd",
                        "createdAt": "2015-04-24T11:56:44.585Z",
                        "updatedAt": "2015-04-24T11:56:44.585Z"
                      }
                    ],
                    "code": 200
                  }

      /{attchment_id}:
        post:
          description: |
            为联系人添加一个附件 (错误信息和leancloud错误信息一致)
          responses:
            200:
              body:
                application/json:
                  schema: |
                    {
                      "data": {
                        "attachments": {
                          "__type": "Relation",
                          "className": "_File"
                        },
                        "address": "",
                        "email": "",
                        "certificateType": "",
                        "name": "1231",
                        "certificateNum": "1231",
                        "qq": "",
                        "wechat": "",
                        "objectId": "5540d023e4b055ee74e9c1a3",
                        "createdAt": "2015-04-29T12:35:47.878Z",
                        "updatedAt": "2015-04-29T13:39:17.149Z"
                      },
                      "code": 200
                    }
        delete:
          description: |
            为联系人删除一个附件 (错误信息和leancloud错误信息一致)
          responses:
            200:
              body:
                application/json:
                  schema: |
                    {
                      "data": {
                        "attachments": {
                          "__type": "Relation",
                          "className": "_File"
                        },
                        "address": "",
                        "email": "",
                        "certificateType": "",
                        "name": "1231",
                        "certificateNum": "1231",
                        "qq": "",
                        "wechat": "",
                        "objectId": "5540d023e4b055ee74e9c1a3",
                        "createdAt": "2015-04-29T12:35:47.878Z",
                        "updatedAt": "2015-04-29T13:39:17.149Z"
                      },
                      "code": 200
                    }

  /list:
    /all:
      description: |
        获取一个用户所有联系人（未分页）
      get:
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                    "data":[
                      {
                          "id": "5541a2f8e4b0679ef5c0e805",
                          "name": "dsfsadfas",
                          "email": "",
                          "certificateNum": "",
                          "certificateType": "shenfenzheng",
                          "address": "",
                          "qq": "",
                          "wechat": "",
                          "mobilePhoneNumber": "",
                          "sendSmsOrNot": false,
                          "createdAt": "2015-04-30T03:35:20.645Z",
                          "updatedAt": "2015-04-30T04:13:25.995Z"
                      }
                    ],
                    "code":200
                  }
    /page/{pn}:
      get:
        description: |
          分页获取联系人数据
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                      "data": {
                          "totalPageNum": 1,
                          "totalNum": 10,
                          "pageSize": 10,
                          "values": [
                              {
                                  "address": "",
                                  "email": "",
                                  "certificateType": "",
                                  "name": "dsfsadfas",
                                  "sendSmsOrNot": false,
                                  "attachments": {
                                      "__type": "Relation",
                                      "className": "_File"
                                  },
                                  "certificateNum": "",
                                  "qq": "",
                                  "wechat": "",
                                  "owner": {
                                      "__type": "Pointer",
                                      "className": "_User",
                                      "objectId": "552f6a6de4b0c29c3ca3a046"
                                  },
                                  "objectId": "5541a2f8e4b0679ef5c0e805",
                                  "createdAt": "2015-04-30T03:35:20.645Z",
                                  "updatedAt": "2015-04-30T04:13:25.995Z"
                              }
                          ]
                      },
                      "code": 200
                  }              

  /certificate/{certificateNum}:
    description: |
      通过证件号获取一个用户
    get:  
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "data":[{},{}],
                  "code":200
                }
        404:
          body:
            application/json:
              schema: |
                {
                  "message": "contact not found",
                  "code": 404
                }

  /search:
    get:
      description: 根据名字或者身份证搜索用户
      queryParameters:
        type:
          description: |
            查询类型  name:名字 | certificate:身份证号
          type: string
        key:
          description: |
            查询匹配字段
          type: string
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "data": [
                    {
                      "id": "5545adaae4b019255be3abdf",
                      "objectId": "5545adaae4b019255be3abdf",
                      "name": "郭意亮",
                      "email": "",
                      "certificateNum": "522601199110290816",
                      "address": "",
                      "qq": "",
                      "wechat": "",
                      "certificateType": "",
                      "mobilePhoneNumber": "",
                      "sendSmsOrNot": false,
                      "createdAt": "2015-05-03T05:10:02.445Z",
                      "updatedAt": "2015-05-03T05:10:02.445Z"
                    }
                  ],
                  "code": 200
                }
  
/attachment:
  post:
    queryParameters:
      attachment:
        type: file
      fileType:
        description: |
          文件类型，从字典表获取
        type: string
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "data": {
                      "metaData": {
                          "owner": "unknown",
                          "size": 527,
                          "fileType": "receipt",
                          "mime_type": "text/plain"
                      },
                      "id": "552a2294e4b0b40da36ba7e7",
                      "url": "http://ac-gvw1ggob.clouddn.com/b7f1294b28cdbb96.md",
                      "name": "xxxxxx.md"
                  },
                  "code": 200
              }

/dict:
  /{key}:
    get:
      queryParameters:
        key:
          description: |
            字典表的名称
          type: string
          example: |
           [loanStatus, loanPayBackStatus, payBackWays, loanTypes, fileTypes]
      description: |
        获取还款类型
      responses:
        200:
          description: |
            各个字典表的对象（以还款方法为例）
          body:
            application/json:
              schema: |
                {
                  "data": [
                    {
                      "value": "fcdy",
                      "text": "房产抵押"
                    },
                    {
                      "value": "qcdy",
                      "text": "汽车抵押"
                    },
                    {
                      "value": "mfdy",
                      "text": "买房抵押"
                    },
                    {
                      "value": "mcdy",
                      "text": "买车抵押"
                    },
                    {
                      "value": "wdy",
                      "text": "无抵押"
                    },
                    {
                      "value": "qtdy",
                      "text": "其他抵押"
                    }
                  ],
                  "code": 200
                }
 